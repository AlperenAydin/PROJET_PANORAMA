function Pano = InterpolPano(I,H)
% On a q2=Hq1

[~,~,t]= size(H); %t = nombre d'homographie (aussi = à nbr d'images -1)

for i = 1:t
    H(:,:,i) = inv(H(:,:,i));
    invH(:,:,i)=inv(H(:,:,i));
end

%taille images
[~, ~, nbI]= size(I);
Taille = zeros(2, nbI);
for i=1:nbI
    [h, w, ~]= size(I(:,:,i));
    Taille(:,i) = [h, w];
    Coins_im(:,:,i) = [1 1 1;
                       w 1 1;
                       1 h 1;
                       w h 1]'; %coordonnées des points coins des images
end

%calcul de la taille de l'image panoramique

[x_min, x_max, y_min, y_max] = Offset(invH, Coins_im);

%creation de l'image panoramique
Pano = zeros(y_max-y_min, x_max-x_min);

%% Placement de l'image de ref dans l'image panoramique
i_min = 2-y_min;
j_min = 2-x_min;

%affichage
figure(); colormap gray;
imagesc(Pano);

[h w] = Taille(:,1); %taille de l'image de reference
Pano(i_min:i_min+h-1, j_min:j_min+w-1) = I(:,:,1);

%% Placement des pixels des autres images dans l'image panoramique

%calcul de la zone a recouvrir par les autres images
for i=2;t
    [xi_min, xi_max, yi_min, yi_max] = Zone_Couverte(invH, Coins_im);
end

for x=xi_min:xi_max-1
    c = x-x_min+1;

    for y=yi_min:yi_max-1
        l = y-y_min+1;

        if Pano(l,c) == 0
            p = f_Hx(H, x, y);
            if(p(2) >0 && p(1) >0 && p(2) <= h1 && p(1) <= w1)
                Pano(l,c) = I2(p(2), p(1));
            end
        end
    
    end
end


end